server {
  listen 80; # Nginx listens on port 80

  location / {
    root /usr/share/nginx/html; # Serve static files from the build directory
    index index.html index.htm; # Default files to serve if a directory is requested
    # This line is CRUCIAL for React apps with client-side routing (e.g., React Router).
    # It tells Nginx:
    # 1. Try to serve the requested URI as a file.
    # 2. If not a file, try to serve it as a directory.
    # 3. If neither, fall back to serving index.html (so React Router can handle the URL).
    try_files $uri $uri/ /index.html;
  }

  # OPTIONAL: If your frontend makes API calls to your backend using relative paths
  # (e.g., `/api/tasks`), you can uncomment and configure this proxy block.
  # This makes Nginx forward those requests to your backend service.
  # If your frontend uses absolute URLs like `http://localhost:5000/tasks`,
  # you'll need to update your frontend code to use a Docker service name
  # or adjust your environment variables (see Step 4).
  #
  # location /api/ {
  #   # 'backend' refers to the name of your backend service in docker-compose.yml
  #   # 5000 is the port your backend container is listening on (EXPOSEd port)
  #   proxy_pass http://backend:5000/;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection 'upgrade';
  #   proxy_set_header Host $host;
  #   proxy_cache_bypass $http_upgrade;
  # }
}